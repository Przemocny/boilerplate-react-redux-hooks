{"version":3,"sources":["pages/MainPage/components.js","common/globals.js","api/request.js","api/weather.api.js","pages/MainPage/store.js","pages/MainPage/logic.js","pages/MainPage/index.js","App.js","index.js"],"names":["CelciusSymbol","react_default","a","createElement","WeatherLoader","className","WeatherError","_ref","_ref$message","message","WeatherParamsList","_ref2","temp_max","temp_min","clouds","humidity","wind","pressure","components_CelciusSymbol","WeatherCityInput","_ref3","onSubmit","city","onChange","type","value","placeholder","e","target","onClick","preventDefault","WeatherMain","_ref4","_ref4$icon","icon","main","temp","country","time","urlToIcon","concat","src","alt","WEATHER_API_DEFAULT_PARAMS","units","APPID","instance","axios","create","baseURL","timeout","headers","Accept","Content-Type","request","_url","_config","arguments","length","undefined","console","log","req","Object","objectSpread","url","multipart","query","keys","querystring","stringify","then","data","status","logger","api","config","method","q","initial_state","actual_weather","error","imBusy","createSlice","slice","initialState","reducers","initLoadingData","state","action","actualWeatherFetchedWithSuccess","payload","actualWeatherFetchedWithError","changeCity","actions","reducer","loadWeatherData","dispatch","actualWeatherForCityName","preprocessedData","preprocessed","name","all","speed","dt","coord","weather","sys","timezone","moment","utc","local","format","preprocessActualWeatherResponse","catch","response","onCitySubmit","val","onCityChange","MainPage","useDispatch","_useSelector","useSelector","Main","shallowEqual","useEffect","components_WeatherLoader","components_WeatherCityInput","components_WeatherError","components_WeatherMain","components_WeatherParamsList","App","pages_MainPage","store","configureStore","mainPageReducer","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.efa2b36c.chunk.js","sourcesContent":["import React from 'react';\n\nconst CelciusSymbol = () => {\n    return (<span>&#8451;</span>)\n}\n\nconst WeatherLoader = () => {\n    return (<div className='weather-loading'>LOADING</div>)\n}\n\nconst WeatherError = ({ message = 'Unknown Error' }) => {\n    return (\n        <div className='weather-error'>\n        <h4>ERROR: <strong>{message}</strong></h4></div>\n    )\n}\n\nconst WeatherParamsList = ({\n    temp_max, temp_min, clouds, humidity, wind, pressure\n}) => {\n    return (\n        <div className='weather-secondary-params mt-3'>\n            <div className='row m-0'>\n                <div className='col-md m-0 mt-3 pb-3'>\n                    <h6>Min temperature: <strong>{temp_min}<CelciusSymbol /></strong></h6>\n                    <h6>Max temperature: <strong>{temp_max}<CelciusSymbol /></strong></h6>\n                </div>\n                <div className='col-md m-0 mt-3 pb-3'>\n                    <h6>Pressure: <strong>{pressure}</strong></h6>\n                    <h6>Wind speed: <strong>{wind}</strong></h6>\n                </div>\n                <div className='col-md m-0 mt-3 pb-3'>\n                    <h6>Clouds: <strong>{clouds}</strong></h6>\n                    <h6>Humidity: <strong>{humidity}</strong></h6>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nconst WeatherCityInput = ({\n    onSubmit, city, onChange\n}) => {\n    return (\n        <div className='weather-form'>\n            <form className='row'>\n                <div className=\"form-group col-md\">\n                    <input type='text'\n                        value={city}\n                        placeholder='City'\n                        className=\"form-control\"\n                        onChange={(e) => {\n                            onChange(e.target.value)\n                        }} />\n                </div>\n                <div className=\"form-group col-md\">\n                    <button className=\"btn btn-block btn-primary\" onClick={(e) => {\n                        e.preventDefault()\n                        onSubmit(city)\n                    }}>Check weather</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst WeatherMain = ({ icon = '01d', main, temp, city, country, time }) => {\n\n    const urlToIcon = `http://openweathermap.org/img/wn/${icon}@2x.png`\n\n    return (\n        <div className='weather-main'>\n            <img src={urlToIcon}  alt='weather icon'/>\n            <h6><small>{time} <strong>{city}, {country}</strong></small></h6>\n            <h3><strong>{temp}<CelciusSymbol /> / {main}</strong></h3>\n        </div>\n    )\n}\n\n\nexport {\n    WeatherParamsList,\n    WeatherCityInput,\n    WeatherLoader,\n    WeatherError,\n    WeatherMain\n}","\nconst WEATHER_API_ENDPOINT = 'https://api.openweathermap.org/data/2.5'\n\nconst WEATHER_API_KEY = '05508bb378ad891b493b0c886cca7a57'\nconst WEATHER_API_DEFAULT_CITY = 'Lublin'\n\nconst WEATHER_API_DEFAULT_PARAMS = {\n    'units':'metric',\n    'APPID':WEATHER_API_KEY\n}\n\nexport {\n    WEATHER_API_DEFAULT_CITY,\n    WEATHER_API_DEFAULT_PARAMS,\n    WEATHER_API_ENDPOINT,\n    WEATHER_API_KEY\n}","import axios from 'axios';\nimport querystring from 'query-string'\nimport { WEATHER_API_ENDPOINT } from '../common/globals'\n\n// consts\nconst DEBUG = true;\nconst baseURL = WEATHER_API_ENDPOINT\n\nconst instance = axios.create({\n    baseURL: baseURL,\n    timeout: 1000 * 60,\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n    }\n})\n\nconst logger = (data, url) => {\n    DEBUG && console.log(url, `\\n\\t status: ${data.status}`, `\\n\\t payload: `, data.data)\n    return data.data\n}\n\nexport const request = (_url, _config = {}) => {\n    DEBUG && console.log(_url, 'config', _config);\n    let req = {\n        url: _url,\n        ..._config\n    }\n    if (!req.headers) {\n        req.headers = {}\n    }\n    if (_config.multipart) {\n        req.headers['content-type'] = 'multipart/form-data'\n    }\n\n    if (_config.query && Object.keys(_config.query).length !== 0) {\n        req.url += '?' + querystring.stringify(_config.query)\n    }\n\n    // to do - error handling\n    return instance\n        .request(req)\n        .then((data) => {\n            return logger(data, _url);\n        })\n}","import { request } from './request'\nimport { WEATHER_API_DEFAULT_PARAMS, WEATHER_API_DEFAULT_CITY } from '../common/globals'\n\nclass WeatherAPI {\n    actualWeatherForCityName(city = WEATHER_API_DEFAULT_CITY) {\n        const url = `/weather`\n\n        const config = {\n            method: 'GET',\n            query: {\n                ...WEATHER_API_DEFAULT_PARAMS,\n                'q': city\n            }\n        }\n\n        return request(url, config)\n    }\n\n}\n\nconst api = new WeatherAPI()\n\nexport {\n  api\n}","import {createSlice} from 'redux-starter-kit';\nimport { WEATHER_API_DEFAULT_CITY } from '../../common/globals'\n\nconst initial_state = {\n    actual_weather: {},\n    city: WEATHER_API_DEFAULT_CITY,\n    error: false,\n    imBusy: true\n}\n\nconst {actions, reducer} = createSlice({\n    slice : 'Main',\n    initialState : initial_state,\n    reducers : {\n        initLoadingData(state, action) {\n            state.imBusy = true\n            state.error = false\n            state.actual_weather = {}\n        },\n        actualWeatherFetchedWithSuccess(state, action) {\n            state.imBusy = false\n            state.error = false\n            state.actual_weather = action.payload\n        },\n        actualWeatherFetchedWithError(state, action) {\n            state.imBusy = false\n            state.error = action.payload\n        },\n        changeCity(state, action) {\n            state.city = action.payload\n        },\n    }\n});\n\nexport const {\n    initLoadingData,\n    actualWeatherFetchedWithSuccess,\n    actualWeatherFetchedWithError,\n    changeCity\n} = actions;\n\nexport default reducer;\n\n","import moment from 'moment';\nimport { api } from '../../api/weather.api'\nimport {\n    initLoadingData,\n    actualWeatherFetchedWithSuccess,\n    actualWeatherFetchedWithError,\n    changeCity\n} from './store'\n\n\nconst preprocessActualWeatherResponse = (data) => {\n    const preprocessed = {\n        'city': data.name,\n        'clouds': data.clouds.all,\n        'wind': data.wind.speed,\n        'time': data.dt,\n        ...data.coord,\n        ...data.main,\n        ...data.weather[0],\n        ...data.sys,\n        ...data.timezone\n    }\n\n    // drop unnecessary props\n    delete preprocessed['type']\n    delete preprocessed['id']\n    delete preprocessed['message']\n    // delete preprocessed['icon']\n\n    // convert to moment dt\n    preprocessed['time'] = moment(preprocessed['time'], 'X').utc().local().format('HH:mm DD.MM.YYYY')\n    preprocessed['sunrise'] = moment(preprocessed['sunrise'], 'X').utc().local().format('HH:mm')\n    preprocessed['sunset'] = moment(preprocessed['sunset'], 'X').utc().local().format('HH:mm')\n\n    // adding units\n    preprocessed['pressure'] += 'hPa'\n    preprocessed['humidity'] += '%'\n    preprocessed['clouds'] += '%'\n    preprocessed['wind'] += 'm/s'\n\n    return preprocessed\n}\n\nconst loadWeatherData = (dispatch, city = null) => {\n    dispatch(initLoadingData())\n\n    let prom = city ? api.actualWeatherForCityName(city) : api.actualWeatherForCityName()\n\n    return prom.then((data) => {\n        const preprocessedData = preprocessActualWeatherResponse(data)\n        dispatch(actualWeatherFetchedWithSuccess(preprocessedData))\n        return data\n    })\n        .catch(({ response }) => {\n            const { data } = response\n            dispatch(actualWeatherFetchedWithError(data))\n            return data\n        })\n}\n\n\nconst onCitySubmit = (dispatch) => (val) => {\n    loadWeatherData(dispatch, val)\n}\n\nconst onCityChange = (dispatch) => (city) => {\n    dispatch(changeCity(city))\n}\n\nexport {\n    loadWeatherData, onCitySubmit, onCityChange\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\n\nimport { WeatherParamsList, WeatherCityInput, WeatherLoader, WeatherError, WeatherMain } from './components';\nimport { loadWeatherData, onCityChange, onCitySubmit } from './logic'\n\nconst MainPage = () => {\n\n    const dispatch = useDispatch();\n    const { actual_weather, imBusy, error, city } = useSelector(state => state.Main, shallowEqual);\n\n    // init loading data\n    useEffect(() => {\n        loadWeatherData(dispatch)\n    }, [])\n\n    if (imBusy) {\n        return (\n            <div className='weather-container'>\n                <WeatherLoader />\n            </div>\n        )\n    }\n    else {\n        if (error) {\n            return (\n                <div className='weather-container'>\n                    <WeatherCityInput\n                        onSubmit={onCitySubmit(dispatch)}\n                        onChange={onCityChange(dispatch)}\n                        city={city}\n                    />\n                    <WeatherError {...error} />\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className='weather-container'>\n                    <WeatherCityInput\n                        onSubmit={onCitySubmit(dispatch)}\n                        onChange={onCityChange(dispatch)}\n                        city={city}\n                    />\n                    <div className='row'>\n                        <div className='col-md'>\n                            <WeatherMain {...actual_weather} />\n                        </div>\n                    </div>\n                    <div className='row'>\n                        <div className='col'>\n                            <WeatherParamsList {...actual_weather} />\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n}\n\nexport default MainPage","import React from 'react';\n// pages\nimport MainPage from './pages/MainPage';\n\nimport './style/style.scss'\n\nfunction App() {\n  return (\n\n    <div className='app container'>\n        <div className='row align-items-center'>\n          <div className='col'>\n            <MainPage />\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { configureStore } from 'redux-starter-kit';\n\nimport mainPageReducer from './pages/MainPage/store';\n\nconst store = configureStore({\n    reducer : {\n        Main : mainPageReducer\n    }\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}